<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <title>Go by Example: Maps</title>
  <link rel=stylesheet href="site.css">
</head>
<script>
  onkeydown = (e) => {

    if (e.key == "ArrowLeft") {
      window.location.href = 'slices';
    }


    if (e.key == "ArrowRight") {
      window.location.href = 'range';
    }

  }
</script>

<body>
  <div class="example" id="maps">
    <h2><a href="./">Go by Example</a>: Maps</h2>

    <table>

      <tr>
        <td class="docs">
          <p><em>Maps</em> son el tipo de <a href="https://en.wikipedia.org/wiki/Associative_array"
              target="_blank">datos asociativo incorporado en Go</a>
            (a veces llamados <em>hashes</em> o <em>dicts</em> en otros lenguajes).</p>
        </td>
        <td class="code empty leading">

        </td>
      </tr>

      <tr>
        <td class="docs">

        </td>
        <td class="code leading">
          <a href="https://go.dev/play/p/5jpkxJ2T0Lv"><img title="Run code" src="play.png" class="run" /></a><img
            title="Copy code" src="clipboard.png" class="copy" />
          <pre
            class="chroma"><code><span class="line"><span class="cl"><span class="kn">package</span> <span class="nx">main</span></span></span></code></pre>
        </td>
      </tr>

      <tr>
        <td class="docs">

        </td>
        <td class="code leading">

          <pre class="chroma"><code><span class="line"><span class="cl"><span class="kn">import</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="s">&#34;fmt&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s">&#34;maps&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span></span></span></code></pre>
        </td>
      </tr>

      <tr>
        <td class="docs">

        </td>
        <td class="code leading">

          <pre
            class="chroma"><code><span class="line"><span class="cl"><span class="kd">func</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span></span></span></code></pre>
        </td>
      </tr>

      <tr>
        <td class="docs">
          <p>Para crear un mapa vacío, usa la función incorporada <code>make</code>:
            <code>make(map[key-type]val-type)</code>.
          </p>

        </td>
        <td class="code leading">

          <pre
            class="chroma"><code><span class="line"><span class="cl">    <span class="nx">m</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">int</span><span class="p">)</span></span></span></code></pre>
        </td>
      </tr>

      <tr>
        <td class="docs">
          <p>Establece pares key/value usando la sintaxis típica <code>name[key] = val</code>.</p>

        </td>
        <td class="code leading">

          <pre
            class="chroma"><code><span class="line"><span class="cl">    <span class="nx">m</span><span class="p">[</span><span class="s">&#34;k1&#34;</span><span class="p">]</span> <span class="p">=</span> <span class="mi">7</span>
</span></span><span class="line"><span class="cl">    <span class="nx">m</span><span class="p">[</span><span class="s">&#34;k2&#34;</span><span class="p">]</span> <span class="p">=</span> <span class="mi">13</span></span></span></code></pre>
        </td>
      </tr>

      <tr>
        <td class="docs">

          <p>Imprimir un map con, por ejemplo, <code>fmt.Println</code> mostrará todos
            sus pares key/value.</p>

        </td>
        <td class="code leading">

          <pre
            class="chroma"><code><span class="line"><span class="cl">    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;map:&#34;</span><span class="p">,</span> <span class="nx">m</span><span class="p">)</span></span></span></code></pre>
        </td>
      </tr>

      <tr>
        <td class="docs">
          <p>Obtén un valor para una clave con <code>name[key]</code>.</p>
        </td>
        <td class="code leading">

          <pre
            class="chroma"><code><span class="line"><span class="cl">    <span class="nx">v1</span> <span class="o">:=</span> <span class="nx">m</span><span class="p">[</span><span class="s">&#34;k1&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;v1:&#34;</span><span class="p">,</span> <span class="nx">v1</span><span class="p">)</span></span></span></code></pre>
        </td>
      </tr>

      <tr>
        <td class="docs">
          <p>Si la clave no existe, se devuelve el
            <a href="https://go.dev/ref/spec#The_zero_value" target="_blank">valor cero</a> del tipo de valor.
          </p>

        </td>
        <td class="code leading">

          <pre
            class="chroma"><code><span class="line"><span class="cl">    <span class="nx">v3</span> <span class="o">:=</span> <span class="nx">m</span><span class="p">[</span><span class="s">&#34;k3&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;v3:&#34;</span><span class="p">,</span> <span class="nx">v3</span><span class="p">)</span></span></span></code></pre>
        </td>
      </tr>

      <tr>
        <td class="docs">
          <p>La función incorporada <code>len</code> devuelve el número de pares key/value
            cuando se llama en un map.</p>
        </td>
        <td class="code leading">

          <pre
            class="chroma"><code><span class="line"><span class="cl">    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;len:&#34;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="nx">m</span><span class="p">))</span></span></span></code></pre>
        </td>
      </tr>

      <tr>
        <td class="docs">
          <p>La función incorporada <code>delete</code> elimina pares ckey/value de
            un map.</p>

        </td>
        <td class="code leading">

          <pre
            class="chroma"><code><span class="line"><span class="cl">    <span class="nb">delete</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span> <span class="s">&#34;k2&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;map:&#34;</span><span class="p">,</span> <span class="nx">m</span><span class="p">)</span></span></span></code></pre>
        </td>
      </tr>

      <tr>
        <td class="docs">
          <p>Para eliminar <em>todos</em> los pares key/value de un map, usa
            la función incorporada <code>clear</code>.</p>
        </td>
        <td class="code leading">

          <pre
            class="chroma"><code><span class="line"><span class="cl">    <span class="nb">clear</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;map:&#34;</span><span class="p">,</span> <span class="nx">m</span><span class="p">)</span></span></span></code></pre>
        </td>
      </tr>

      <tr>
        <td class="docs">
          <p>El segundo valor de retorno opcional al obtener un
            valor de un map indica si la clave estaba presente
            en el map. Esto se puede utilizar para distinguir
            entre claves que faltan y claves con valores cero
            como <code>0</code> o <code>&quot;&quot;</code>. Aquí no necesitábamos el valor
            en sí, por lo que lo ignoramos con el <em>identificador en blanco</em>
            <code>_</code>.
          </p>

        </td>
        <td class="code leading">

          <pre
            class="chroma"><code><span class="line"><span class="cl">    <span class="nx">_</span><span class="p">,</span> <span class="nx">prs</span> <span class="o">:=</span> <span class="nx">m</span><span class="p">[</span><span class="s">&#34;k2&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;prs:&#34;</span><span class="p">,</span> <span class="nx">prs</span><span class="p">)</span></span></span></code></pre>
        </td>
      </tr>

      <tr>
        <td class="docs">
          <p>También puedes declarar e inicializar un nuevo map en
            la misma línea con esta sintaxis.</p>
        </td>
        <td class="code leading">

          <pre
            class="chroma"><code><span class="line"><span class="cl">    <span class="nx">n</span> <span class="o">:=</span> <span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">int</span><span class="p">{</span><span class="s">&#34;foo&#34;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">&#34;bar&#34;</span><span class="p">:</span> <span class="mi">2</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;map:&#34;</span><span class="p">,</span> <span class="nx">n</span><span class="p">)</span></span></span></code></pre>
        </td>
      </tr>

      <tr>
        <td class="docs">
          <p>El paquete <code>maps</code> contiene un número de funciones utilitarias útiles
            para los maps.</p>
        </td>
        <td class="code">

          <pre class="chroma"><code><span class="line"><span class="cl">    <span class="nx">n2</span> <span class="o">:=</span> <span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">int</span><span class="p">{</span><span class="s">&#34;foo&#34;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">&#34;bar&#34;</span><span class="p">:</span> <span class="mi">2</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="nx">maps</span><span class="p">.</span><span class="nf">Equal</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span> <span class="nx">n2</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;n == n2&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre>
        </td>
      </tr>

    </table>

    <table>

      <tr>
        <td class="docs">
          <p>Ten en cuenta que los maps se muestran en la forma <code>map[k:v k:v]</code> cuando
            se imprimen con <code>fmt.Println</code>.</p>

        </td>
        <td class="code">

          <pre class="chroma"><code><span class="line"><span class="cl"><span class="gp">$</span> go run maps.go 
</span></span><span class="line"><span class="cl"><span class="go">map: map[k1:7 k2:13]
</span></span></span><span class="line"><span class="cl"><span class="go">v1: 7
</span></span></span><span class="line"><span class="cl"><span class="go">v3: 0
</span></span></span><span class="line"><span class="cl"><span class="go">len: 2
</span></span></span><span class="line"><span class="cl"><span class="go">map: map[k1:7]
</span></span></span><span class="line"><span class="cl"><span class="go">map: map[]
</span></span></span><span class="line"><span class="cl"><span class="go">prs: false
</span></span></span><span class="line"><span class="cl"><span class="go">map: map[bar:2 foo:1]
</span></span></span><span class="line"><span class="cl"><span class="go">n == n2</span></span></span></code></pre>
        </td>
      </tr>

    </table>


    <p class="next">
      Siguiente ejemplo: <a href="range">Range</a>.
    </p>


    <p class="footer">
      by <a href="https://markmcgranaghan.com" target="_blank">Mark McGranaghan</a> and <a
        href="https://eli.thegreenplace.net" target="_blank">Eli
        Bendersky</a> | <a href="https://github.com/domini-code/gobyexample" target="_blank">source</a> | <a
        href="https://github.com/domini-code/gobyexample#license" target="_blank">licencia</a>
      | <a href="https://twitter.com/bezael_perez" target="_blank">traducido por Bezael</a>
    </p>

  </div>
  <script>
    var codeLines = [];
    codeLines.push(''); codeLines.push('package main\u000A'); codeLines.push('import (\u000A    \"fmt\"\u000A    \"maps\"\u000A)\u000A'); codeLines.push('func main() {\u000A'); codeLines.push('    m :\u003D make(map[string]int)\u000A'); codeLines.push('    m[\"k1\"] \u003D 7\u000A    m[\"k2\"] \u003D 13\u000A'); codeLines.push('    fmt.Println(\"map:\", m)\u000A'); codeLines.push('    v1 :\u003D m[\"k1\"]\u000A    fmt.Println(\"v1:\", v1)\u000A'); codeLines.push('    v3 :\u003D m[\"k3\"]\u000A    fmt.Println(\"v3:\", v3)\u000A'); codeLines.push('    fmt.Println(\"len:\", len(m))\u000A'); codeLines.push('    delete(m, \"k2\")\u000A    fmt.Println(\"map:\", m)\u000A'); codeLines.push('    clear(m)\u000A    fmt.Println(\"map:\", m)\u000A'); codeLines.push('    _, prs :\u003D m[\"k2\"]\u000A    fmt.Println(\"prs:\", prs)\u000A'); codeLines.push('    n :\u003D map[string]int{\"foo\": 1, \"bar\": 2}\u000A    fmt.Println(\"map:\", n)\u000A'); codeLines.push('    n2 :\u003D map[string]int{\"foo\": 1, \"bar\": 2}\u000A    if maps.Equal(n, n2) {\u000A        fmt.Println(\"n \u003D\u003D n2\")\u000A    }\u000A}\u000A'); codeLines.push('');
  </script>
  <script src="site.js" async></script>
</body>

</html>